{"version":3,"sources":["./src/environments/environment.ts","./src/app/diagram/diagram.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\n  AfterContentInit,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  ViewChild,\n  SimpleChanges,\n  EventEmitter\n} from '@angular/core';\nimport BpmnModdle from 'bpmn-moddle';\nimport BpmnColorPickerModule from 'bpmn-js-color-picker';\nimport { HttpClient } from '@angular/common/http';\nimport { map, switchMap } from 'rxjs/operators';\n\n/**\n * You may include a different variant of BpmnJS:\n *\n * bpmn-viewer  - displays BPMN diagrams without the ability\n *                to navigate them\n * bpmn-modeler - bootstraps a full-fledged BPMN editor\n */\nimport * as BpmnJS from 'bpmn-js/dist/bpmn-modeler.production.min.js';\n\nimport { from, Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-diagram',\n  template: `\n    <div #ref class=\"diagram-container\"></div>\n  `,\n  styles: [\n    `\n      .diagram-container {\n        height: 100%;\n        width: 100%;\n      }\n    `\n  ]\n})\nexport class DiagramComponent implements AfterContentInit, OnChanges, OnDestroy {\n  private bpmnJS: BpmnJS;\n\n  @ViewChild('ref', { static: true }) private el: ElementRef;\n  @Output() private importDone: EventEmitter<any> = new EventEmitter();\n\n  @Input() private url: string;\n  private modeling:any;\n  constructor(private http: HttpClient) {\n\n    this.bpmnJS = new BpmnJS({\n      additionalModules: [\n        BpmnColorPickerModule\n      ],\n      keyboard: { bindTo: document },\n      bpmnRenderer: {\n        // defaultFillColor: '#333',\n        // defaultStrokeColor: '#fff'\n      },\n      defaultStyle: {\n        // fontFamily: '\"Roboto\"'\n      },\n    });\n\n    this.bpmnJS.on('import.done', ({ error }) => {\n      if (!error) {\n        this.bpmnJS.get('canvas').zoom('fit-viewport');\n  // this.modeling = this.bpmnJS.get('modeling');\n  //       console.log(this.modeling);\n      }\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.bpmnJS.attachTo(this.el.nativeElement);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // re-import whenever the url changes\n    if (changes.url) {\n      this.loadUrl(changes.url.currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.bpmnJS.destroy();\n  }\n\n  /**\n   * Load diagram from URL and emit completion event\n   */\n  loadUrl(url: string): Subscription {\n\n    return (\n      this.http.get(url, { responseType: 'text' }).pipe(\n        switchMap((xml: string) => this.importDiagram(xml)),\n        map(result => result.warnings),\n      ).subscribe(\n        (warnings) => {\n          this.importDone.emit({\n            type: 'success',\n            warnings\n          });\n        },\n        (err) => {\n          this.importDone.emit({\n            type: 'error',\n            error: err\n          });\n        }\n      )\n    );\n  }\n\n  /**\n   * Creates a Promise to import the given XML into the current\n   * BpmnJS instance, then returns it as an Observable.\n   *\n   * @see https://github.com/bpmn-io/bpmn-js-callbacks-to-promises#importxml\n   */\n  private importDiagram(xml: string): Observable<{warnings: Array<any>}> {\n    return from(this.bpmnJS.importXML(xml) as Promise<{warnings: Array<any>}>);\n  }\n}\n","<div class=\"main_app_container\">\n  <div class=\"app_header\">\n    <div class=\"left-side-menu menu_btn\"><span class=\"material-icons\">\n      menu\n      </span></div>\n    <div class=\"right-side-menu srch_btn\"><span class=\"material-icons\">\n      search\n      </span></div>\n  </div>\n  <div class=\"app_sidebar\">\n    <div class=\"menu_items\"><span class=\"material-icons\">circle</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">notifications</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">question_answer</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">bookmark</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">rectangle</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">person</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">visibility</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">beenhere</span></div>\n    </div>  \n\n  <div class=\"app_body\">\n    <div class=\"diagram-parent\">\n      <app-diagram [url]=\"diagramUrl\" (importDone)=\"handleImported($event)\"></app-diagram>\n\n      <div class=\"import-error\" *ngIf=\"importError\">\n        <strong>Failed to render diagram: </strong>\n        {{ importError.message }}\n      </div>\n    </div>\n    <div class=\"property_container\">\n      <h4>Speclink API Properties</h4>\n    </div>\n    <div class=\"status_container\">\n      <h4>Speclink API Status</h4>\n\n    </div>\n  </div>\n</div>\n\n\n","import { Component } from '@angular/core';\n// import diagram from \"./../assets/diagram.bpmn\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bpmn-js-angular';\n  diagramUrl = '/assets/diagram.bpmn';\n  importError?: Error;\n\n  handleImported(event) {\n\n    const {\n      type,\n      error,\n      warnings\n    } = event;\n\n    if (type === 'success') {\n      console.log(`Rendered diagram (%s warnings)`, warnings.length);\n    }\n\n    if (type === 'error') {\n      console.error('Failed to render diagram', error);\n    }\n\n    this.importError = error;\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { DiagramComponent } from './diagram/diagram.component';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DiagramComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}