{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/diagram/diagram.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","DiagramComponent","http","importDone","bpmnJS","additionalModules","keyboard","bindTo","document","bpmnRenderer","defaultStyle","on","error","get","zoom","attachTo","el","nativeElement","changes","url","loadUrl","currentValue","destroy","responseType","pipe","xml","importDiagram","result","warnings","subscribe","emit","type","err","importXML","AppComponent","title","diagramUrl","event","console","log","length","importError","handleImported","AppModule","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\n  AfterContentInit,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  ViewChild,\n  SimpleChanges,\n  EventEmitter\n} from '@angular/core';\nimport BpmnModdle from 'bpmn-moddle';\nimport BpmnColorPickerModule from 'bpmn-js-color-picker';\nimport { HttpClient } from '@angular/common/http';\nimport { map, switchMap } from 'rxjs/operators';\n\n/**\n * You may include a different variant of BpmnJS:\n *\n * bpmn-viewer  - displays BPMN diagrams without the ability\n *                to navigate them\n * bpmn-modeler - bootstraps a full-fledged BPMN editor\n */\nimport * as BpmnJS from 'bpmn-js/dist/bpmn-modeler.production.min.js';\n\nimport { from, Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-diagram',\n  template: `\n    <div #ref class=\"diagram-container\"></div>\n  `,\n  styles: [\n    `\n      .diagram-container {\n        height: 100%;\n        width: 100%;\n      }\n    `\n  ]\n})\nexport class DiagramComponent implements AfterContentInit, OnChanges, OnDestroy {\n  private bpmnJS: BpmnJS;\n\n  @ViewChild('ref', { static: true }) private el: ElementRef;\n  @Output() private importDone: EventEmitter<any> = new EventEmitter();\n\n  @Input() private url: string;\n  private modeling:any;\n  constructor(private http: HttpClient) {\n\n    this.bpmnJS = new BpmnJS({\n      additionalModules: [\n        BpmnColorPickerModule\n      ],\n      keyboard: { bindTo: document },\n      bpmnRenderer: {\n        // defaultFillColor: '#333',\n        // defaultStrokeColor: '#fff'\n      },\n      defaultStyle: {\n        // fontFamily: '\"Roboto\"'\n      },\n    });\n\n    this.bpmnJS.on('import.done', ({ error }) => {\n      if (!error) {\n        this.bpmnJS.get('canvas').zoom('fit-viewport');\n  // this.modeling = this.bpmnJS.get('modeling');\n  //       console.log(this.modeling);\n      }\n    });\n  }\n\n  ngAfterContentInit(): void {\n    this.bpmnJS.attachTo(this.el.nativeElement);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // re-import whenever the url changes\n    if (changes.url) {\n      this.loadUrl(changes.url.currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.bpmnJS.destroy();\n  }\n\n  /**\n   * Load diagram from URL and emit completion event\n   */\n  loadUrl(url: string): Subscription {\n\n    return (\n      this.http.get(url, { responseType: 'text' }).pipe(\n        switchMap((xml: string) => this.importDiagram(xml)),\n        map(result => result.warnings),\n      ).subscribe(\n        (warnings) => {\n          this.importDone.emit({\n            type: 'success',\n            warnings\n          });\n        },\n        (err) => {\n          this.importDone.emit({\n            type: 'error',\n            error: err\n          });\n        }\n      )\n    );\n  }\n\n  /**\n   * Creates a Promise to import the given XML into the current\n   * BpmnJS instance, then returns it as an Observable.\n   *\n   * @see https://github.com/bpmn-io/bpmn-js-callbacks-to-promises#importxml\n   */\n  private importDiagram(xml: string): Observable<{warnings: Array<any>}> {\n    return from(this.bpmnJS.importXML(xml) as Promise<{warnings: Array<any>}>);\n  }\n}\n","<div class=\"main_app_container\">\n  <div class=\"app_header\">\n    <div class=\"left-side-menu menu_btn\"><span class=\"material-icons\">\n      menu\n      </span></div>\n    <div class=\"right-side-menu srch_btn\"><span class=\"material-icons\">\n      search\n      </span></div>\n  </div>\n  <div class=\"app_sidebar\">\n    <div class=\"menu_items\"><span class=\"material-icons\">circle</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">notifications</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">question_answer</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">bookmark</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">rectangle</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">person</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">visibility</span></div>\n    <div class=\"menu_items\"><span class=\"material-icons\">beenhere</span></div>\n    </div>  \n\n  <div class=\"app_body\">\n    <div class=\"diagram-parent\">\n      <app-diagram [url]=\"diagramUrl\" (importDone)=\"handleImported($event)\"></app-diagram>\n\n      <div class=\"import-error\" *ngIf=\"importError\">\n        <strong>Failed to render diagram: </strong>\n        {{ importError.message }}\n      </div>\n    </div>\n    <div class=\"property_container\">\n      <h4>Speclink API Properties</h4>\n    </div>\n    <div class=\"status_container\">\n      <h4>Speclink API Status</h4>\n\n    </div>\n  </div>\n</div>\n\n\n","import { Component } from '@angular/core';\n// import diagram from \"./../assets/diagram.bpmn\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bpmn-js-angular';\n  diagramUrl = '/assets/diagram.bpmn';\n  importError?: Error;\n\n  handleImported(event) {\n\n    const {\n      type,\n      error,\n      warnings\n    } = event;\n\n    if (type === 'success') {\n      console.log(`Rendered diagram (%s warnings)`, warnings.length);\n    }\n\n    if (type === 'error') {\n      console.error('Failed to render diagram', error);\n    }\n\n    this.importError = error;\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { DiagramComponent } from './diagram/diagram.component';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DiagramComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}